"""Add comprehensive schema with tenant isolation

Revision ID: ef73a6268e73
Revises: 
Create Date: 2025-08-25 17:57:49.937576

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ef73a6268e73'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('analytics_daily',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('meetings_count', sa.Integer(), nullable=False),
    sa.Column('minutes_total', sa.Integer(), nullable=False),
    sa.Column('avg_confidence', sa.Float(), nullable=True),
    sa.Column('avg_response_latency_ms', sa.Integer(), nullable=True),
    sa.Column('top_skills', sa.JSON(), nullable=False),
    sa.Column('usage_by_user', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_analytics_daily'))
    )
    op.create_index('ix_analytics_daily_date', 'analytics_daily', ['date'], unique=False)
    op.create_index('ix_analytics_daily_tenant_date', 'analytics_daily', ['tenant_id', 'date'], unique=False)
    op.create_index(op.f('ix_analytics_daily_tenant_id'), 'analytics_daily', ['tenant_id'], unique=False)
    op.create_table('plans',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('monthly_price', sa.Integer(), nullable=False),
    sa.Column('meeting_minutes_limit', sa.Integer(), nullable=False),
    sa.Column('token_limit', sa.Integer(), nullable=False),
    sa.Column('features', sa.JSON(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_plans')),
    sa.UniqueConstraint('name', name=op.f('uq_plans_name'))
    )
    op.create_index('ix_plans_active', 'plans', ['is_active'], unique=False)
    op.create_table('quotas',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('period_start', sa.DateTime(), nullable=False),
    sa.Column('period_end', sa.DateTime(), nullable=False),
    sa.Column('minutes_used', sa.Integer(), nullable=False),
    sa.Column('tokens_used', sa.Integer(), nullable=False),
    sa.Column('overage_minutes', sa.Integer(), nullable=False),
    sa.Column('overage_tokens', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_quotas'))
    )
    op.create_index('ix_quotas_period_end', 'quotas', ['period_end'], unique=False)
    op.create_index(op.f('ix_quotas_tenant_id'), 'quotas', ['tenant_id'], unique=False)
    op.create_index('ix_quotas_tenant_period', 'quotas', ['tenant_id', 'period_start', 'period_end'], unique=False)
    op.create_table('skills',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('category', sa.Enum('SALES', 'PM', 'TECH', 'CS', 'LEADERSHIP', 'COMMUNICATION', name='skillcategory'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('rubric', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_skills'))
    )
    op.create_index('ix_skills_category', 'skills', ['tenant_id', 'category'], unique=False)
    op.create_index('ix_skills_tenant_id', 'skills', ['tenant_id'], unique=False)
    op.create_table('teams',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_teams')),
    sa.UniqueConstraint('tenant_id', 'name', name='uq_teams_tenant_name')
    )
    op.create_index('ix_teams_tenant_id', 'teams', ['tenant_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('role', sa.Enum('SUPER_ADMIN', 'ADMIN', 'MANAGER', 'USER', name='userrole'), nullable=False),
    sa.Column('provider', sa.Enum('GOOGLE', 'MICROSOFT', 'PASSWORD', name='userprovider'), nullable=False),
    sa.Column('provider_id', sa.String(length=255), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'SUSPENDED', name='userstatus'), nullable=False),
    sa.Column('job_description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('tenant_id', 'email', name='uq_users_tenant_email')
    )
    op.create_index('ix_users_provider', 'users', ['provider', 'provider_id'], unique=False)
    op.create_index('ix_users_tenant_email', 'users', ['tenant_id', 'email'], unique=False)
    op.create_index('ix_users_tenant_id', 'users', ['tenant_id'], unique=False)
    op.create_table('webhooks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('url', sa.String(length=500), nullable=False),
    sa.Column('secret', sa.String(length=255), nullable=False),
    sa.Column('event_types', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('last_delivery_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_webhooks'))
    )
    op.create_index('ix_webhooks_last_delivery', 'webhooks', ['last_delivery_at'], unique=False)
    op.create_index('ix_webhooks_tenant_id', 'webhooks', ['tenant_id'], unique=False)
    op.create_table('api_keys',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('label', sa.String(length=100), nullable=False),
    sa.Column('hash', sa.String(length=255), nullable=False),
    sa.Column('scopes', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('revoked_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_api_keys_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_api_keys')),
    sa.UniqueConstraint('hash', name=op.f('uq_api_keys_hash'))
    )
    op.create_index('ix_api_keys_hash', 'api_keys', ['hash'], unique=False)
    op.create_index('ix_api_keys_revoked', 'api_keys', ['revoked_at'], unique=False)
    op.create_index('ix_api_keys_tenant_id', 'api_keys', ['tenant_id'], unique=False)
    op.create_index('ix_api_keys_user_id', 'api_keys', ['user_id'], unique=False)
    op.create_table('audit_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('actor_user_id', sa.UUID(), nullable=True),
    sa.Column('action', sa.Enum('CREATE', 'UPDATE', 'DELETE', 'LOGIN', 'LOGOUT', 'INVITE', 'REVOKE', name='auditaction'), nullable=False),
    sa.Column('target_type', sa.String(length=50), nullable=False),
    sa.Column('target_id', sa.UUID(), nullable=True),
    sa.Column('meta', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['actor_user_id'], ['users.id'], name=op.f('fk_audit_logs_actor_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_audit_logs'))
    )
    op.create_index('ix_audit_logs_action', 'audit_logs', ['action'], unique=False)
    op.create_index('ix_audit_logs_actor_user_id', 'audit_logs', ['actor_user_id'], unique=False)
    op.create_index('ix_audit_logs_created_at', 'audit_logs', ['created_at'], unique=False)
    op.create_index('ix_audit_logs_target', 'audit_logs', ['target_type', 'target_id'], unique=False)
    op.create_index('ix_audit_logs_tenant_created', 'audit_logs', ['tenant_id', 'created_at'], unique=False)
    op.create_index('ix_audit_logs_tenant_id', 'audit_logs', ['tenant_id'], unique=False)
    op.create_table('devices',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('platform', sa.Enum('MACOS', 'WINDOWS', name='deviceplatform'), nullable=False),
    sa.Column('machine_fingerprint', sa.String(length=255), nullable=False),
    sa.Column('app_version', sa.String(length=50), nullable=False),
    sa.Column('last_seen_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_devices_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_devices'))
    )
    op.create_index('ix_devices_fingerprint', 'devices', ['machine_fingerprint'], unique=False)
    op.create_index('ix_devices_last_seen', 'devices', ['last_seen_at'], unique=False)
    op.create_index('ix_devices_user_id', 'devices', ['user_id'], unique=False)
    op.create_table('documents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('uploader_user_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('s3_key', sa.String(length=500), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=False),
    sa.Column('size_bytes', sa.BigInteger(), nullable=False),
    sa.Column('indexed', sa.Boolean(), nullable=False),
    sa.Column('vector_idx_id', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['uploader_user_id'], ['users.id'], name=op.f('fk_documents_uploader_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_documents'))
    )
    op.create_index('ix_documents_indexed', 'documents', ['indexed'], unique=False)
    op.create_index('ix_documents_s3_key', 'documents', ['s3_key'], unique=False)
    op.create_index('ix_documents_tenant_id', 'documents', ['tenant_id'], unique=False)
    op.create_index('ix_documents_uploader_user_id', 'documents', ['uploader_user_id'], unique=False)
    op.create_table('meetings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('team_id', sa.UUID(), nullable=True),
    sa.Column('owner_user_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('platform', sa.Enum('ZOOM', 'TEAMS', 'MEET', 'GENERIC', name='meetingplatform'), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('SCHEDULED', 'LIVE', 'PROCESSING', 'READY', 'FAILED', name='meetingstatus'), nullable=False),
    sa.Column('language', sa.Enum('TR', 'EN', 'AUTO', name='language'), nullable=False),
    sa.Column('ai_mode', sa.Enum('STANDARD', 'SUPER', name='aimode'), nullable=False),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_user_id'], ['users.id'], name=op.f('fk_meetings_owner_user_id_users')),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], name=op.f('fk_meetings_team_id_teams')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_meetings'))
    )
    op.create_index('ix_meetings_owner_user_id', 'meetings', ['owner_user_id'], unique=False)
    op.create_index('ix_meetings_start_time', 'meetings', ['start_time'], unique=False)
    op.create_index('ix_meetings_status', 'meetings', ['status'], unique=False)
    op.create_index('ix_meetings_team_id', 'meetings', ['team_id'], unique=False)
    op.create_index('ix_meetings_tenant_id', 'meetings', ['tenant_id'], unique=False)
    op.create_index('ix_meetings_tenant_start_time', 'meetings', ['tenant_id', 'start_time'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('plan_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('TRIAL', 'ACTIVE', 'GRACE', 'CANCELLED', name='subscriptionstatus'), nullable=False),
    sa.Column('current_period_start', sa.DateTime(), nullable=False),
    sa.Column('current_period_end', sa.DateTime(), nullable=False),
    sa.Column('overage_policy', sa.Enum('BLOCK', 'PAYG', name='overagepolicy'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], name=op.f('fk_subscriptions_plan_id_plans')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_subscriptions'))
    )
    op.create_index('ix_subscriptions_period_end', 'subscriptions', ['current_period_end'], unique=False)
    op.create_index('ix_subscriptions_status', 'subscriptions', ['status'], unique=False)
    op.create_index('ix_subscriptions_tenant_id', 'subscriptions', ['tenant_id'], unique=False)
    op.create_table('team_members',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('team_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role_in_team', sa.Enum('OWNER', 'ADMIN', 'MEMBER', name='teamrole'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], name=op.f('fk_team_members_team_id_teams'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_team_members_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_team_members')),
    sa.UniqueConstraint('team_id', 'user_id', name='uq_team_members_team_user')
    )
    op.create_index('ix_team_members_team_id', 'team_members', ['team_id'], unique=False)
    op.create_index('ix_team_members_user_id', 'team_members', ['user_id'], unique=False)
    op.create_table('ai_messages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('meeting_id', sa.UUID(), nullable=False),
    sa.Column('turn_no', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('SYSTEM', 'USER', 'ASSISTANT', name='messagerole'), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('tool_calls', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['meeting_id'], ['meetings.id'], name=op.f('fk_ai_messages_meeting_id_meetings'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ai_messages'))
    )
    op.create_index('ix_ai_messages_meeting_id', 'ai_messages', ['meeting_id'], unique=False)
    op.create_index('ix_ai_messages_meeting_turn', 'ai_messages', ['meeting_id', 'turn_no'], unique=False)
    op.create_index('ix_ai_messages_role', 'ai_messages', ['meeting_id', 'role'], unique=False)
    op.create_table('audio_blobs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('meeting_id', sa.UUID(), nullable=False),
    sa.Column('source', sa.Enum('MICROPHONE', 'SYSTEM', name='streamsource'), nullable=False),
    sa.Column('s3_key', sa.String(length=500), nullable=False),
    sa.Column('duration_ms', sa.Integer(), nullable=False),
    sa.Column('size_bytes', sa.BigInteger(), nullable=False),
    sa.Column('part_no', sa.Integer(), nullable=False),
    sa.Column('checksum', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['meeting_id'], ['meetings.id'], name=op.f('fk_audio_blobs_meeting_id_meetings'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_audio_blobs'))
    )
    op.create_index('ix_audio_blobs_meeting_id', 'audio_blobs', ['meeting_id'], unique=False)
    op.create_index('ix_audio_blobs_meeting_part', 'audio_blobs', ['meeting_id', 'part_no'], unique=False)
    op.create_index('ix_audio_blobs_s3_key', 'audio_blobs', ['s3_key'], unique=False)
    op.create_table('meeting_streams',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('meeting_id', sa.UUID(), nullable=False),
    sa.Column('source', sa.Enum('MICROPHONE', 'SYSTEM', name='streamsource'), nullable=False),
    sa.Column('sample_rate', sa.Integer(), nullable=False),
    sa.Column('channels', sa.Integer(), nullable=False),
    sa.Column('codec', sa.Enum('LINEAR16', 'OPUS', 'AAC', name='codec'), nullable=False),
    sa.Column('ws_endpoint', sa.Text(), nullable=True),
    sa.Column('bytes_in', sa.BigInteger(), nullable=False),
    sa.Column('packets_in', sa.Integer(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('stopped_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['meeting_id'], ['meetings.id'], name=op.f('fk_meeting_streams_meeting_id_meetings'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_meeting_streams'))
    )
    op.create_index('ix_meeting_streams_meeting_id', 'meeting_streams', ['meeting_id'], unique=False)
    op.create_index('ix_meeting_streams_source', 'meeting_streams', ['meeting_id', 'source'], unique=False)
    op.create_table('skill_assessments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('meeting_id', sa.UUID(), nullable=False),
    sa.Column('skill_id', sa.UUID(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('evidence', sa.Text(), nullable=True),
    sa.Column('improvement_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['meeting_id'], ['meetings.id'], name=op.f('fk_skill_assessments_meeting_id_meetings'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], name=op.f('fk_skill_assessments_skill_id_skills'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_skill_assessments_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_skill_assessments'))
    )
    op.create_index('ix_skill_assessments_meeting_id', 'skill_assessments', ['meeting_id'], unique=False)
    op.create_index('ix_skill_assessments_skill_id', 'skill_assessments', ['skill_id'], unique=False)
    op.create_index('ix_skill_assessments_user_id', 'skill_assessments', ['user_id'], unique=False)
    op.create_index('ix_skill_assessments_user_skill', 'skill_assessments', ['user_id', 'skill_id'], unique=False)
    op.create_table('transcripts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('meeting_id', sa.UUID(), nullable=False),
    sa.Column('segment_no', sa.Integer(), nullable=False),
    sa.Column('speaker', sa.String(length=50), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('start_ms', sa.Integer(), nullable=False),
    sa.Column('end_ms', sa.Integer(), nullable=False),
    sa.Column('is_final', sa.Boolean(), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('raw_json', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['meeting_id'], ['meetings.id'], name=op.f('fk_transcripts_meeting_id_meetings'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_transcripts'))
    )
    op.create_index('ix_transcripts_meeting_id', 'transcripts', ['meeting_id'], unique=False)
    op.create_index('ix_transcripts_meeting_segment', 'transcripts', ['meeting_id', 'segment_no'], unique=False)
    op.create_index('ix_transcripts_speaker', 'transcripts', ['meeting_id', 'speaker'], unique=False)
    op.create_index('ix_transcripts_timing', 'transcripts', ['meeting_id', 'start_ms', 'end_ms'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_transcripts_timing', table_name='transcripts')
    op.drop_index('ix_transcripts_speaker', table_name='transcripts')
    op.drop_index('ix_transcripts_meeting_segment', table_name='transcripts')
    op.drop_index('ix_transcripts_meeting_id', table_name='transcripts')
    op.drop_table('transcripts')
    op.drop_index('ix_skill_assessments_user_skill', table_name='skill_assessments')
    op.drop_index('ix_skill_assessments_user_id', table_name='skill_assessments')
    op.drop_index('ix_skill_assessments_skill_id', table_name='skill_assessments')
    op.drop_index('ix_skill_assessments_meeting_id', table_name='skill_assessments')
    op.drop_table('skill_assessments')
    op.drop_index('ix_meeting_streams_source', table_name='meeting_streams')
    op.drop_index('ix_meeting_streams_meeting_id', table_name='meeting_streams')
    op.drop_table('meeting_streams')
    op.drop_index('ix_audio_blobs_s3_key', table_name='audio_blobs')
    op.drop_index('ix_audio_blobs_meeting_part', table_name='audio_blobs')
    op.drop_index('ix_audio_blobs_meeting_id', table_name='audio_blobs')
    op.drop_table('audio_blobs')
    op.drop_index('ix_ai_messages_role', table_name='ai_messages')
    op.drop_index('ix_ai_messages_meeting_turn', table_name='ai_messages')
    op.drop_index('ix_ai_messages_meeting_id', table_name='ai_messages')
    op.drop_table('ai_messages')
    op.drop_index('ix_team_members_user_id', table_name='team_members')
    op.drop_index('ix_team_members_team_id', table_name='team_members')
    op.drop_table('team_members')
    op.drop_index('ix_subscriptions_tenant_id', table_name='subscriptions')
    op.drop_index('ix_subscriptions_status', table_name='subscriptions')
    op.drop_index('ix_subscriptions_period_end', table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index('ix_meetings_tenant_start_time', table_name='meetings')
    op.drop_index('ix_meetings_tenant_id', table_name='meetings')
    op.drop_index('ix_meetings_team_id', table_name='meetings')
    op.drop_index('ix_meetings_status', table_name='meetings')
    op.drop_index('ix_meetings_start_time', table_name='meetings')
    op.drop_index('ix_meetings_owner_user_id', table_name='meetings')
    op.drop_table('meetings')
    op.drop_index('ix_documents_uploader_user_id', table_name='documents')
    op.drop_index('ix_documents_tenant_id', table_name='documents')
    op.drop_index('ix_documents_s3_key', table_name='documents')
    op.drop_index('ix_documents_indexed', table_name='documents')
    op.drop_table('documents')
    op.drop_index('ix_devices_user_id', table_name='devices')
    op.drop_index('ix_devices_last_seen', table_name='devices')
    op.drop_index('ix_devices_fingerprint', table_name='devices')
    op.drop_table('devices')
    op.drop_index('ix_audit_logs_tenant_id', table_name='audit_logs')
    op.drop_index('ix_audit_logs_tenant_created', table_name='audit_logs')
    op.drop_index('ix_audit_logs_target', table_name='audit_logs')
    op.drop_index('ix_audit_logs_created_at', table_name='audit_logs')
    op.drop_index('ix_audit_logs_actor_user_id', table_name='audit_logs')
    op.drop_index('ix_audit_logs_action', table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index('ix_api_keys_user_id', table_name='api_keys')
    op.drop_index('ix_api_keys_tenant_id', table_name='api_keys')
    op.drop_index('ix_api_keys_revoked', table_name='api_keys')
    op.drop_index('ix_api_keys_hash', table_name='api_keys')
    op.drop_table('api_keys')
    op.drop_index('ix_webhooks_tenant_id', table_name='webhooks')
    op.drop_index('ix_webhooks_last_delivery', table_name='webhooks')
    op.drop_table('webhooks')
    op.drop_index('ix_users_tenant_id', table_name='users')
    op.drop_index('ix_users_tenant_email', table_name='users')
    op.drop_index('ix_users_provider', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_teams_tenant_id', table_name='teams')
    op.drop_table('teams')
    op.drop_index('ix_skills_tenant_id', table_name='skills')
    op.drop_index('ix_skills_category', table_name='skills')
    op.drop_table('skills')
    op.drop_index('ix_quotas_tenant_period', table_name='quotas')
    op.drop_index(op.f('ix_quotas_tenant_id'), table_name='quotas')
    op.drop_index('ix_quotas_period_end', table_name='quotas')
    op.drop_table('quotas')
    op.drop_index('ix_plans_active', table_name='plans')
    op.drop_table('plans')
    op.drop_index(op.f('ix_analytics_daily_tenant_id'), table_name='analytics_daily')
    op.drop_index('ix_analytics_daily_tenant_date', table_name='analytics_daily')
    op.drop_index('ix_analytics_daily_date', table_name='analytics_daily')
    op.drop_table('analytics_daily')
    # ### end Alembic commands ###
